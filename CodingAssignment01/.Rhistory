View(Insurance_Data_Group9)
>>>>>>> Stashed changes
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
sessionInfo()
# Bring in the dataset here
<<<<<<< Updated upstream
read.csv("insurance_data_group9.csv")
library(cellranger)
library(askpass)
library(backports)
library(bigD)
library(base64enc)
library(bit)
library(bit64)
library(bitops)
library(blob)
library(boot)
library(brio)
library(broom)
library(bslib)
library(cachem)
library(callr)
library(cards)
library(cellranger)
library(class)
library(cli)
library(clipr)
library(cluster)
library(codetools)
library(colorspace)
library(commonmark)
library(compiler)
library(conflicted)
library(corrplot)
library(cpp11)
library(crayon)
library(crosstalk)
library(curl)
library(data.table)
library(DBI)
library(dbplyr)
library(desc)
library(diffobj)
library(digest)
library(dplyr)
library(dtplyr)
library(evaluate)
library(fansi)
library(farver)
library(fastmap)
library(fontawesome)
library(forcats)
library(foreign)
library(fs)
library(gargle)
library(generics)
library(ggplot2)
library(glue)
library(googledrive)
library(googlesheets4)
library(grid)
library(gt)
library(gtable)
library(gtsummary)
library(haven)
library(highr)
library(hms)
library(htmltools)
library(htmlwidgets)
library(httr)
library(ids)
library(isoband)
library(jquerylib)
library(jsonlite)
library(juicyjuice)
library(KernSmooth)
library(knitr)
library(labeling)
library(later)
library(lattice)
library(lazyeval)
library(lifecycle)
library(lubridate)
library(magrittr)
library(markdown)
library(MASS)
library(Matrix)
library(memoise)
library(mgcv)
library(modelr)
library(mime)
library(munsell)
library(nnet)
library(openssl)
library(parallel)
library(pillar)
library(pkgbuild)
library(pkgconfig)
library(pkgload)
library(plotly)
library(praise)
library(prettyunits)
library(processx)
library(progress)
library(promises)
library(ps)
library(purrr)
library(R6)
library(ragg)
library(rappdirs)
library(RColorBrewer)
library(Rcpp)
library(RCurl)
library(reactable)
library(reactR)
library(readr)
library(readxl)
library(rematch)
library(rematch2)
library(reprex)
library(rlang)
library(rmarkdown)
library(rpart)
library(rprojroot)
library(rstudioapi)
library(rvest)
library(sass)
library(scales)
library(selectr)
library(spatial)
library(splines)
library(stats4)
library(stringi)
library(stringr)
library(survival)
library(swirl)
library(sys)
library(systemfonts)
library(tcltk)
library(testthat)
library(textshaping)
library(tibble)
library(tidyr)
library(tidyselect)
library(tidyverse)
library(timechange)
library(tinytex)
library(tools)
library(tzdb)
library(utf8)
library(uuid)
library(V8)
library(vctrs)
library(viridisLite)
library(vroom)
library(waldo)
library(withr)
library(xfun)
library(xml2)
library(yaml)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
sessionInfo()
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
# Bring in the dataset here
read.csv("Insurance.Data.Group9")
# Bring in the dataset here
read.csv("Insurance.Data.Group9")
# Bring in the dataset here
read.csv("Insurance.Data.Group9.csv")
# Bring in the dataset here
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
sessionInfo()
install.packages("readr")
# Bring in the dataset here
getwd()
# Bring in the dataset here
getwd()
mydata <- read.csv("Insurance_data_Group9")
setwd("~/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/Documents/GitHub/Group-9/CodingAssignment01")
# Bring in the dataset here
getwd()
mydata <- read.csv("Insurance_data_Group9")
setwd("/Users/alli/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/Documents/GitHub/Group-9/CodingAssignment01")
# Bring in the dataset here
getwd()
mydata <- read.csv("Insurance_data_Group9")
# Bring in the dataset here
read.csv("Insurance_data_Group9")
library(cellranger)
knitr::opts_chunk$set(echo = TRUE)
# Bring in the dataset here
read.csv("Insurance_data_Group9")
View(Insurance_Data_Group9)
# Bring in the dataset here
read.csv("/OneDrive/Documents/GitHub/Group-9/CodingAssignment1/Insurance_data_Group9")
# Bring in the dataset here
getwd()
# Bring in the dataset here
read.csv("/Users/alli/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/Documents/GitHub/Group-9/CodingAssignment01/Insurance_data_group9.csv")
# Bring in the dataset here
read.csv("/Users/alli/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/Documents/GitHub/Group-9/CodingAssignment01/Insurance_data_group9.csv")
# Bring in the dataset here
read.csv("/Users/alli/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/Documents/GitHub/Group-9/CodingAssignment01/Insurance_data_group9.csv")
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
sessionInfo()
install.packages("readr")
# Bring in the dataset here
read.csv("/Users/alli/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/Documents/GitHub/Group-9/CodingAssignment01/Insurance_data_group9.csv")
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv)
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv")
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv")
read.csv(Insurance_Data_Group9)
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv")
read.csv("Insurance_Data_Group9")
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv")
read.csv(Insurance_Data_Group9)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
sessionInfo()
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv")
mean(mydata)
# Bring in the dataset here
mydata <- read.csv("Insurance_Data_Group9.csv")
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
hist(claims)
knitr::opts_chunk$set(echo = TRUE)
# Bring in the dataset here
claims <- read.csv("..Data\Insurance_Data_Group9.csv")
# Bring in the dataset here
claims <- read.csv("..Data/Insurance_Data_Group9.csv")
# Bring in the dataset here
claims <- read.csv("..CodingAssignment1/Insurance_Data_Group9")
# Bring in the dataset here
claims <- read.csv("../CodingAssignment1/Insurance_Data_Group9")
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9")
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
str(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims)
View(Insurance_Data_Group9)
mean($charges)
mean(claims$charges)
claims=read.csv(Insurance_Data_Group9)
claims=read.csv(Insurance_Data_Group9)
charges <- mean(claims$Charges)
charges <- mean(claims$Charges)
mean(claims$Charges)
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
claims <- rnorm(100, mean=75, sd=5)
hist(claims)
mean(claims$Charges)
mean(claims$Charges)
mean(claims$Charges)
mean(claims$Charges)
mean(claims$Charges)
mean(claims$charges)
mean(claims$Charges)
mean(claims$Charges)
mean(claims$Charges)
mean(claims$Charges)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
mean(claims$Charges)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
=======
model <- lm( Charges ~ Age + BMI + Children, data = InsuranceData)
>>>>>>> Stashed changes
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
claims <- read.csv("Insurance_Data_Group9.csv")
mean(claims$Charges)
median(claims$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(claims)
View(Insurance_Data_Group9)
View(claims)
knitr::opts_chunk$set(echo = TRUE)
charges <- 4083.36 + 221.94 * 40 - 75.24 * 30 + 1019.22 * 1
claims <- 4083.36 + 221.94 * 40 - 75.24 * 30 + 1019.22 * 1
plot(x,y)
# Question 4
An eager insurance representative comes back with a potential client. The client is 40, their BMI is 30, and they have one dependent. Using the regression equation above, predict the amount of medical expenses associated with this policy. (Provide a 95% confidence interval as well)
knitr::opts_chunk$set(echo = TRUE)
-> rm(charges)

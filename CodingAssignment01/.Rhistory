hist(Insurance_Data_Group9$Age)
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$BMI)
mean(Insurance_Data_Group9$BMI)
median(Insurance_Data_Group9$BMI)
boxplot(Insurance_Data_Group9$BMI)
var(Insurance_Data_Group9$BMI)
sd(Insurance_Data_Group9$BMI)
IQR(Insurance_Data_Group9$BMI)
range(Insurance_Data_Group9$BMI)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$BMI)
hist(Insurance_Data_Group9$Children)
mean(Insurance_Data_Group9$Children)
median(Insurance_Data_Group9$Children)
boxplot(Insurance_Data_Group9$Children)
var(Insurance_Data_Group9$Children)
sd(Insurance_Data_Group9$Children)
IQR(Insurance_Data_Group9$Children)
range(Insurance_Data_Group9$Children)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Children)
model <- lm( Charges ~ Age + BMI + Children, data = claims)
summary (model)
knitr::opts_chunk$set(echo = TRUE)
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
mean(Insurance_Data_Group9$BMI)
median(Insurance_Data_Group9$BMI)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$BMI)
hist(Insurance_Data_Group9$BMI)
boxplot(Insurance_Data_Group9$BMI)
var(Insurance_Data_Group9$BMI)
sd(Insurance_Data_Group9$BMI)
IQR(Insurance_Data_Group9$BMI)
range(Insurance_Data_Group9$BMI)
mean(Insurance_Data_Group9$Children)
median(Insurance_Data_Group9$Children)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Children)
hist(Insurance_Data_Group9$Children)
boxplot(Insurance_Data_Group9$Children)
var(Insurance_Data_Group9$Children)
sd(Insurance_Data_Group9$Children)
IQR(Insurance_Data_Group9$Children)
range(Insurance_Data_Group9$Children)
model <- lm( Charges ~ Age + BMI + Children, data = claims)
model <- lm( Charges ~ Age + BMI + Children, data = claims)
model <- lm(Charges ~ Age + BMI + Children, data = claims)
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(tidyverse)
library(gtsummary)
library(plotly)
library(corrplot)
sessionInfo()
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(plotly)
library(readxl)
library(corrplot)
library(ggplot2)
library(jtools)
library(sos)
library(magrittr)
library(car)
library(tidyverse)
library(gtsummary)
library(knitr)
library(parameters)
library(broom.helpers)
sessionInfo()
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
<<<<<<< HEAD
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
mean(Insurance_Data_Group9$Children)
median(Insurance_Data_Group9$Children)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Children)
hist(Insurance_Data_Group9$Children)
boxplot(Insurance_Data_Group9$Children)
var(Insurance_Data_Group9$Children)
sd(Insurance_Data_Group9$Children)
IQR(Insurance_Data_Group9$Children)
range(Insurance_Data_Group9$Children)
reduced <- Insurance_Data_Group9 %>%
select(Charges, Age, BMI, Children)
corrplot(cor(reduced),
type = "lower",
order = "hclust",
tl.col = "black",
tl.srt = 45,
addCoef.col = "black",
diag = FALSE)
model <- lm(Charges + Age + BMI + Children, data = Insurance_Data_Group9)
model <- lm(~Charges + Age + BMI + Children, data = Insurance_Data_Group9)
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(plotly)
library(readxl)
library(corrplot)
library(ggplot2)
library(jtools)
library(sos)
library(magrittr)
library(car)
library(tidyverse)
library(gtsummary)
library(knitr)
library(parameters)
library(broom.helpers)
sessionInfo()
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
mean(Insurance_Data_Group9$BMI)
median(Insurance_Data_Group9$BMI)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$BMI)
hist(Insurance_Data_Group9$BMI)
boxplot(Insurance_Data_Group9$BMI)
var(Insurance_Data_Group9$BMI)
sd(Insurance_Data_Group9$BMI)
IQR(Insurance_Data_Group9$BMI)
range(Insurance_Data_Group9$BMI)
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
=======
>>>>>>> 8be60252000b83fa23a85300264d40aa258bc78e
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
mean(Insurance_Data_Group9$BMI)
median(Insurance_Data_Group9$BMI)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$BMI)
hist(Insurance_Data_Group9$BMI)
boxplot(Insurance_Data_Group9$BMI)
var(Insurance_Data_Group9$BMI)
sd(Insurance_Data_Group9$BMI)
IQR(Insurance_Data_Group9$BMI)
range(Insurance_Data_Group9$BMI)
mean(Insurance_Data_Group9$Children)
median(Insurance_Data_Group9$Children)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Children)
hist(Insurance_Data_Group9$Children)
boxplot(Insurance_Data_Group9$Children)
var(Insurance_Data_Group9$Children)
sd(Insurance_Data_Group9$Children)
IQR(Insurance_Data_Group9$Children)
range(Insurance_Data_Group9$Children)
reduced <- Insurance_Data_Group9 %>%
select(Charges, Age, BMI, Children)
corrplot(cor(reduced),
type = "lower",
order = "hclust",
tl.col = "black",
tl.srt = 45,
addCoef.col = "black",
diag = FALSE)
scatterplotMatrix(~ Charges + Age + BMI + Children, data = Insurance_Data_Group9)
model <- lm( Charges ~ Age + BMI + Children, data = Insurance_Data_Group9)
summ(model)
<<<<<<< HEAD
=======
knitr::opts_chunk$set(echo = TRUE)
# Put any packages you want here
library(gt)
library(plotly)
library(readxl)
library(corrplot)
library(ggplot2)
library(jtools)
library(sos)
library(magrittr)
library(car)
library(tidyverse)
library(gtsummary)
library(knitr)
library(parameters)
library(broom.helpers)
sessionInfo()
# Bring in the dataset here
Insurance_Data_Group9 <- read.csv("Insurance_Data_Group9.csv")
mean(Insurance_Data_Group9$Charges)
median(Insurance_Data_Group9$Charges)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Charges)
hist(Insurance_Data_Group9$Charges)
boxplot(Insurance_Data_Group9$Charges)
var(Insurance_Data_Group9$Charges)
sd(Insurance_Data_Group9$Charges)
IQR(Insurance_Data_Group9$Charges)
range(Insurance_Data_Group9$Charges)
mean(Insurance_Data_Group9$Age)
median(Insurance_Data_Group9$Age)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Age)
hist(Insurance_Data_Group9$Age)
boxplot(Insurance_Data_Group9$Age)
var(Insurance_Data_Group9$Age)
sd(Insurance_Data_Group9$Age)
IQR(Insurance_Data_Group9$Age)
range(Insurance_Data_Group9$Age)
mean(Insurance_Data_Group9$BMI)
median(Insurance_Data_Group9$BMI)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$BMI)
hist(Insurance_Data_Group9$BMI)
boxplot(Insurance_Data_Group9$BMI)
var(Insurance_Data_Group9$BMI)
sd(Insurance_Data_Group9$BMI)
IQR(Insurance_Data_Group9$BMI)
range(Insurance_Data_Group9$BMI)
mean(Insurance_Data_Group9$Children)
median(Insurance_Data_Group9$Children)
getModes <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)]
}
getModes(Insurance_Data_Group9$Children)
hist(Insurance_Data_Group9$Children)
boxplot(Insurance_Data_Group9$Children)
var(Insurance_Data_Group9$Children)
sd(Insurance_Data_Group9$Children)
IQR(Insurance_Data_Group9$Children)
range(Insurance_Data_Group9$Children)
reduced <- Insurance_Data_Group9 %>%
select(Charges, Age, BMI, Children)
corrplot(cor(reduced),
type = "lower",
order = "hclust",
tl.col = "black",
tl.srt = 45,
addCoef.col = "black",
diag = FALSE)
scatterplotMatrix(~ Charges + Age + BMI + Children, data = Insurance_Data_Group9)
model <- lm( Charges ~ Age + BMI + Children, data = Insurance_Data_Group9)
summ(model)
newPrediction <- data.frame(Age = 40,
BMI = 30,
Children = 1)
#----------------------------------------------------------------------------------------------------------------
##this part is the confidence interval calculation
predict(model, newdata = newPrediction)
predict(model,
newdata = newPrediction,
interval = "confidence",
level = .95)
>>>>>>> 8be60252000b83fa23a85300264d40aa258bc78e
